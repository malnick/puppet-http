require 'rubygems'
require 'rack'
require 'sinatra'
require 'webrick'
require 'logger'

# Global vars
LOGDIR		    = File.expand_path(File.dirname(__FILE__)) + '/../logs'
SERVER_LOGFILE  = LOGDIR + '/server.log'
SESSION_LOG	    = LOGDIR + '/session.log'

# Reset some envs
ENV['HOME']     = '/root'
ENV['PATH']     = '/sbin:/usr/sbin:/bin:/usr/bin:/opt/puppet/bin'
ENV['RACK_ENV'] = '<%= @rack_env %>'

# Implement an access log for robust logging of user info and access and git output 
LOG = Logger.new(SESSION_LOG)
LOG.info("Setting session log at #{SESSION_LOG}")
LOG.info("Setting server log at #{SERVER_LOGFILE}")

# Server options
opts = {
     :Port               => <%= @port %>,
     :Logger             => WEBrick::Log::new(SERVER_LOGFILE, WEBrick::Log::DEBUG),
     :ServerType         => WEBrick::Daemon,
     :SSLEnable          => <%= @ssl_enable %>,
<% if @ssl_enable %>
     :SSLCertificate     => OpenSSL::X509::Certificate.new(File.open('<%= @cert_path %>').read),
     :SSLPrivateKey      => OpenSSL::PKey::RSA.new(File.open('<%= @key_path %>').read),
	 :SSLCertName        => [ [ "CN",WEBrick::Utils::getservername ] ]
 <% end %>
}

class Server < Sinatra::Base
	
    <%= @http_method %> '/<%= @name %>' do
        IO.popen('<%= @command %>') do |output|
            output.each do |line|
                LOG.info(line.strip.chomp)
            end
        end
	end

	not_found do
		halt 404, 'You shall not pass! (page not found)'
	end
end

Rack::Handler::WEBrick.run(Server, opts) do |server|
	[:INT, :TERM].each { |sig| trap(sig) { server.stop } }
end

